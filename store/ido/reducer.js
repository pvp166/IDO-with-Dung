import {idoActionTypes} from "./action";
import moment from "moment";

const idoInitState = {
    contractAddressBUSD: '',
    receiverBUSD: '',
    totalPeopleRaiseRound1: 0,
    totalPeopleRaiseRound2: 0,
    totalPeopleRaiseRound3: 0,
    idoTxtTime: '',
    totalRaise: 0,
    totalPeopleRaise: 0,
    mineRaise: 0,
    idoUserMax: 500,
    idoRound: 0,
    idoPool1: 150000,
    idoPool2: 250000,
    idoEndtime: '',
    isIdoWhitelist: 0,
    targetRaise: 1000000,
    tokenDistribution: 'Claim',
    tokenFundsSwapped: 700000,
    totalUsersParticipated: 0,
    hardCap: 20000000,
    accessType: 'Whitelist',
    name: 'Business Age of Empires',
    address: 'Coming soon',
    totalSupply: 1000000000,
    decimals: 18,
    symbol: 'BAoE',
    mineBoughtRound1: 0,
    mineBoughtRound2: 0,
    mineBoughtRound3: 0,
    idoCountdown: null
}

export default function reducer(state = idoInitState, action) {
    switch (action.type) {
        case idoActionTypes.GET_INFO:
            return Object.assign({}, state, {
                totalRaise: action.totalRaise,
                totalPeopleRaise: action.totalPeopleRaise,
                mineRaise: action.mineRaise,
                idoUserMax: action.idoUserMax,
                idoRound: action.idoRound,
                idoPool1: action.idoPool1,
                idoPool2: action.idoPool2,
                idoEndtime: action.idoEndtime,
                isIdoWhitelist: action.isIdoWhitelist,
                idoTxtTime: action.idoTxtTime,
                mineBoughtRound1: action.mineBoughtRound1,
                mineBoughtRound2: action.mineBoughtRound2,
                mineBoughtRound3: action.mineBoughtRound3,
                idoCountdown: action.idoCountdown,
                totalPeopleRaiseRound1: action.totalPeopleRaiseRound1,
                totalPeopleRaiseRound2: action.totalPeopleRaiseRound2,
                totalPeopleRaiseRound3: action.totalPeopleRaiseRound3,
                targetRaise: state.targetRaise,
                tokenDistribution: state.tokenDistribution,
                tokenFundsSwapped: state.tokenFundsSwapped,
                totalUsersParticipated: state.totalUsersParticipated,
                hardCap: state.hardCap,
                accessType: state.accessType,
                name: state.name,
                address: state.address,
                totalSupply: state.totalSupply,
                decimals: state.decimals,
                symbol: state.symbol,
                contractAddressBUSD: state.contractAddressBUSD,
                receiverBUSD: state.receiverBUSD,
            })

        case idoActionTypes.GET_IDO_INFO:
            return Object.assign({}, state, {
                contractAddressBUSD: action.contractAddressBUSD,
                receiverBUSD: action.receiverBUSD,
                totalRaise: state.totalRaise,
                totalPeopleRaise: state.totalPeopleRaise,
                mineRaise: state.mineRaise,
                idoUserMax: state.idoUserMax,
                idoRound: state.idoRound,
                idoPool1: state.idoPool1,
                idoPool2: state.idoPool2,
                idoEndtime: state.idoEndtime,
                isIdoWhitelist: state.isIdoWhitelist,
                idoTxtTime: state.idoTxtTime,
                mineBoughtRound1: state.mineBoughtRound1,
                mineBoughtRound2: state.mineBoughtRound2,
                mineBoughtRound3: state.mineBoughtRound3,
                idoCountdown: state.idoCountdown,
                targetRaise: state.targetRaise,
                tokenDistribution: state.tokenDistribution,
                tokenFundsSwapped: state.tokenFundsSwapped,
                totalUsersParticipated: state.totalUsersParticipated,
                hardCap: state.hardCap,
                accessType: state.accessType,
                name: state.name,
                address: state.address,
                totalSupply: state.totalSupply,
                decimals: state.decimals,
                symbol: state.symbol,
                totalPeopleRaiseRound1: state.totalPeopleRaiseRound1,
                totalPeopleRaiseRound2: state.totalPeopleRaiseRound2,
                totalPeopleRaiseRound3: state.totalPeopleRaiseRound3,
            })
        default:
            return state
    }
}
